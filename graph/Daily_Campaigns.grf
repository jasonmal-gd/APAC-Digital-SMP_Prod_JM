<?xml version="1.0" encoding="UTF-8"?>
<Graph author="macmac" created="Wed Jul 16 10:16:18 EST 2014" guiVersion="3.4.4.P" id="1405488437962" licenseType="Commercial" modified="Mon Jul 21 14:53:55 EST 2014" modifiedBy="macmac" name="Campaigns" revision="1.5" showComponentDetails="true">
<Global>
<Metadata fileURL="${META_DIR}/GA_API2.fmt" id="Metadata3"/>
<Metadata fileURL="${META_DIR}/GD_Adwords.fmt" id="Metadata4"/>
<Metadata fileURL="${META_DIR}/SMP_EmailSearch.fmt" id="Metadata2"/>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="GD_Campaign" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field label="Campaign ID" name="Campaign_ID" type="string"/>
<Field label="Campaign" name="Campaign" type="string"/>
<Field name="ClientID" type="string"/>
<Field name="CampaignSource" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATA_SOURCE_DIR}/API2.csv" guiName="CSV API 2" guiX="37" guiY="208" id="CSV_API_2" quoteCharacter="&quot;" quotedStrings="true" type="DATA_READER"/>
<Node enabled="enabled" guiName="Reformat" guiX="293" guiY="256" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.* = $in.0.*;
	$out.0.Campaign_ID = $in.0.campaign;
	$out.0.ClientID = '${CLIENT_ID}';
	$out.0.CampaignSource = 'Google Analytics';

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugMode="true" fromNode="CSV_API_2:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge debugMode="true" fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="SIMPLE_GATHER:0"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${DATA_SOURCE_DIR}/GAW_Data.csv" guiName="GAW Data" guiX="37" guiY="357" id="GAW_DATA" quoteCharacter="&quot;" quotedStrings="true" type="DATA_READER"/>
<Node dataset="dataset.campaign" datasetFieldMappings="{&quot;gd_dataset&quot;:{&quot;datasetId&quot;:&quot;dataset.campaign&quot;,&quot;datasetTitle&quot;:&quot;Campaign&quot;,&quot;attributes&quot;:[{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.campaign.campaignid&quot;,&quot;title&quot;:&quot;Campaign ID&quot;,&quot;prettyId&quot;:&quot;attr_campaign_campaignid&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.campaign.campaignid&quot;,&quot;title&quot;:&quot;Campaign ID&quot;,&quot;prettyId&quot;:&quot;campaignid&quot;,&quot;assignedMetadataField&quot;:&quot;Campaign_ID&quot;,&quot;referenceKey&quot;:true}}],&quot;assignedMetadataField&quot;:null,&quot;selectedDisplayForm&quot;:null}},{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.campaign.campaignname&quot;,&quot;title&quot;:&quot;Campaign Name&quot;,&quot;prettyId&quot;:&quot;attr_campaign_campaignname&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.campaign.campaignname&quot;,&quot;title&quot;:&quot;Campaign Name&quot;,&quot;prettyId&quot;:&quot;campaignname&quot;,&quot;assignedMetadataField&quot;:&quot;Campaign&quot;,&quot;referenceKey&quot;:true}}],&quot;assignedMetadataField&quot;:null,&quot;selectedDisplayForm&quot;:null}},{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.campaign.campaignsource&quot;,&quot;title&quot;:&quot;Campaign Source&quot;,&quot;prettyId&quot;:&quot;attr_campaign_campaignsource&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.campaign.campaignsource&quot;,&quot;title&quot;:&quot;Campaign Source&quot;,&quot;prettyId&quot;:&quot;campaignsource&quot;,&quot;assignedMetadataField&quot;:&quot;CampaignSource&quot;,&quot;referenceKey&quot;:true}}],&quot;assignedMetadataField&quot;:null,&quot;selectedDisplayForm&quot;:{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.campaign.campaignsource&quot;,&quot;title&quot;:&quot;Campaign Source&quot;,&quot;prettyId&quot;:&quot;campaignsource&quot;,&quot;assignedMetadataField&quot;:&quot;CampaignSource&quot;,&quot;referenceKey&quot;:true}}}}],&quot;referencedAttributes&quot;:[{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.client.clientid&quot;,&quot;title&quot;:&quot;Client ID&quot;,&quot;prettyId&quot;:&quot;attr_client_clientid&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.client.clientid&quot;,&quot;title&quot;:&quot;Client ID&quot;,&quot;prettyId&quot;:&quot;client__clientid&quot;,&quot;assignedMetadataField&quot;:null,&quot;referenceKey&quot;:false}}],&quot;assignedMetadataField&quot;:&quot;ClientID&quot;,&quot;selectedDisplayForm&quot;:{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.client.clientid&quot;,&quot;title&quot;:&quot;Client ID&quot;,&quot;prettyId&quot;:&quot;client__clientid&quot;,&quot;assignedMetadataField&quot;:null,&quot;referenceKey&quot;:false}}}}],&quot;dateAttributes&quot;:[],&quot;simpleFacts&quot;:[],&quot;dateFacts&quot;:[],&quot;fieldsWithMetadataConflict&quot;:[],&quot;entitiesWithoutMetadata&quot;:[],&quot;entitiesWithoutValue&quot;:[],&quot;datesWithFactConflict&quot;:[],&quot;unassigneddateFacts&quot;:[]}}" enabled="enabled" guiName="GD Campaign" guiX="810" guiY="404" id="GD_CAMPAIGN" retriesInterval="60" retriesNumber="5" type="GD_DATASET_WRITER"/>
<Node enabled="enabled" guiName="Reformat" guiX="303" guiY="555" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	
	$out.0.ClientID = '${CLIENT_ID}';
	$out.0.CampaignSource = 'Smart Mail Pro';
	$out.0.Campaign_ID = $in.0.EmailID;
	$out.0.Campaign = $in.0.EmailName;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="Reformat" guiX="303" guiY="427" id="REFORMAT2" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.* = $in.0.*;
	$out.0.ClientID = '${CLIENT_ID}';
	$out.0.CampaignSource = 'Google AdWords';

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="SimpleGather" guiX="585" guiY="404" id="SIMPLE_GATHER" type="SIMPLE_GATHER"/>
<Node enabled="enabled" fileURL="${DATA_TMP_DIR}/EmailSearchResults.csv" guiName="SMP Emails" guiX="37" guiY="491" id="SMP_EMAILS" quoteCharacter="&quot;" quotedStrings="true" type="DATA_READER"/>
<Edge debugMode="true" fromNode="GAW_DATA:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="Metadata4" outPort="Port 0 (output)" toNode="REFORMAT2:0"/>
<Edge debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 2 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="SIMPLE_GATHER:2"/>
<Edge debugMode="true" fromNode="REFORMAT2:0" guiBendpoints="" guiRouter="Manhattan" id="Edge5" inPort="Port 1 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="SIMPLE_GATHER:1"/>
<Edge debugMode="true" fromNode="SIMPLE_GATHER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge6" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="GD_CAMPAIGN:0"/>
<Edge debugMode="true" fromNode="SMP_EMAILS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (output)" toNode="REFORMAT1:0"/>
</Phase>
</Graph>
